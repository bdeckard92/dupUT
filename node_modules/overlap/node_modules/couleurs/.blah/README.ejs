<!---------------------------------------------------------------------------->
<!-- STOP, LOOK & LISTEN!                                                   -->
<!-- ====================                                                   -->
<!-- Do NOT edit this file directly since it's generated from a template    -->
<!-- file, using https://github.com/IonicaBizau/node-blah                   -->
<!--                                                                        -->
<!-- If you found a typo in documentation, fix it in the source files       -->
<!-- (`lib/*.js`) and make a pull request.                                  -->
<!--                                                                        -->
<!-- If you have any other ideas, open an issue.                            -->
<!--                                                                        -->
<!-- Please consider reading the contribution steps (CONTRIBUTING.md).      -->
<!-- * * * Thanks! * * *                                                    -->
<!---------------------------------------------------------------------------->


<% // Dependencies %>
<% var IsThere = require("is-there"); %>
<% var Fs = require("fs"); %>
<% var Path = require("path"); %>
<% var Ul = require("ul"); %>

<% // Compute the directory paths %>
<% var binPath = Path.join(_.path, "bin"); %>
<% var examplesPath = Path.join(_.path, "examples"); %>
<% var examplePath = Path.join(_.path, "example"); %>
<% var example = IsThere(examplePath) ? examplePath : IsThere(examplesPath) ? examplesPath : null; %>
<% var isCli = IsThere(binPath); %>

<% if (_.pack.blah.h_img) { %>
![<%= _.pack.name %>](<%= _.pack.blah.h_img %>)
<% } %>

<% // Create the name and description %>
<% if (isCli) { %>
# `$ <%= _.pack.name %>` [![Donate now][donate-now]][paypal-donations]
<% } else { %>
# <%= _.pack.name %> [![Donate now][donate-now]][paypal-donations]
<% } %>
<%= _.pack.description %>

<% if (_.pack.blah.ex_img) { %>
![<%= _.pack.name %>](<%=_.pack.blah.ex_img %>)
<% } %>

<% // INSTALLATION %>
## Installation

```sh
$ npm i <%= _.pack.name %>
```

<% // Cli usage %>
<% if (isCli) { %>
### CLI Usage
You can install the package globally and use it as command line tool:

```sh
$ npm i -g <%= _.pack.name %>
```

Then, run `<%= _.pack.name %> --help` and see what the cli tool can do.

<% } %>

<% // Show the example if there is one %>
<% if (example) { %>
<% var exStrPath = Path.join(example, "index.js"); %>
<% if (!IsThere(exStrPath)) { %>
<%   example = null; %>
<% } %>
<% if (example) { %>
## Example

<% if (isCli) { %>
Here is an example how to use this package as library.
<% } %>

<% var exStr = Fs.readFileSync(exStrPath, "utf-8"); %>
<% exStr = exStr.replace("../lib", _.pack.name) %>

```js
<%- exStr %>
```
<% } %>
<% } %>

<% // Documentation %>
## Documentation

<% if (isCli) { %>
For full API reference, see the [DOCUMENTATION.md][docs] file.
<% } else { %>
<% docs = docs.split("\n").slice(3).join("\n"); %>
<%= docs %>
<% } %>

### `fg(str, r, g, b)`
Sets the foreground color.

Example:

```js
console.log(Couleurs.fg("some text", "#e74c3c"));
console.log(Couleurs("some text").fg("#e74c3c").toString());
```

#### Params
- **String** `str`: The input string.
- **String|Array|Number** `r`: If number, it will be the red value from RGB. If
  array, it should be an array of three numbers representing RGB values. If
  String, it will be interpreted as HEX color.
- **Number** `g`: Green value
- **Number** `b`: Blue value

### `bg(str, r, g, b)`
Sets the background color.

Example:

```js
console.log(Couleurs.bg("some text", "#e74c3c"));
console.log(Couleurs("some text").bg("#e74c3c").toString());
```

#### Params
- **String** `str`: The input string.
- **String|Array|Number** `r`: If number, it will be the red value from RGB. If
  array, it should be an array of three numbers representing RGB values. If
  String, it will be interpreted as HEX color.
- **Number** `g`: Green value
- **Number** `b`: Blue value

### `strike(str)`
Strikes the input string.

Example:

```js
console.log(Couleurs.strike("some text"));
console.log(Couleurs("some text").strike().toString());
```

#### Params
- **String** `str`: The input string.

### `bold(str)`
Makes the text bold.

Example:

```js
console.log(Couleurs.bold("some text"));
console.log(Couleurs("some text").bold().toString());
```

#### Params
- **String** `str`: The input string.

### `italic(str)`
Makes the text italic.

Example:

```js
console.log(Couleurs.italic("some text"));
console.log(Couleurs("some text").italic().toString());
```

#### Params
- **String** `str`: The input string.

### `underline(str)`
Makes the text underline.

Example:

```js
console.log(Couleurs.underline("some text"));
console.log(Couleurs("some text").underline().toString());
```

#### Params
- **String** `str`: The input string.

### `inverse(str)`
Inverses the input text.

Example:

```js
console.log(Couleurs.inverse("some text"));
console.log(Couleurs("some text").inverse().toString());
```

#### Params
- **String** `str`: The input string.

<% // How to contribute %>
## How to contribute
Have an idea? Found a bug? See [how to contribute][contributing].

<% // License information %>
## License
[KINDLY][license] © [Ionică Bizău][website]–The [LICENSE](/LICENSE) file contains
a copy of the license.

<% // Links %>
[license]: http://ionicabizau.github.io/kindly-license/?author=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica@gmail.com%3E&year=2015
[contributing]: /CONTRIBUTING.md
[website]: http://ionicabizau.net
[docs]: /DOCUMENTATION.md
[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=MG98D7NPFZ3MG
[donate-now]: http://i.imgur.com/jioicaN.png
