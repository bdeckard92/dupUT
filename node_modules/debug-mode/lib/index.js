"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var semver = require("semver");

// This was written by @mscdex
// Ref :: https://github.com/nodejs/node/issues/9617#issuecomment-260738538
function isDebugging() {
    var TCP = process.binding("tcp_wrap").TCP,
        tcp = new TCP(),
        r = void 0;

    function doBind() {
        var err = tcp.bind6("::", process.debugPort);
        err && (err = tcp.bind("0.0.0.0", process.debugPort));
        return err;
    }

    doBind();
    if (doBind()) {
        tcp.close();
        return false;
    }

    return true;
}

/**
 * debugMode
 * Detect if Node.js is in debug mode.
 *
 * @name debugMode
 * @function
 * @return {Boolean} `true` if the debug mode is enabled, `false` otherwise.
 */
module.exports = function () {
    if ((typeof v8debug === "undefined" ? "undefined" : _typeof(v8debug)) === "object") {
        return true;
    }

    if (semver.satisfies(process.version, ">6.1.0")) {
        try {
            return isDebugging();
        } catch (e) {}
    }

    return false;
};